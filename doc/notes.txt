#===================================================
#===================================================
# LOGS / NOTES
#===================================================
#===================================================



2020/05/01 19:22:03.032718] Pco::Camera::_init (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:816): _init linux [EXIT]

[2020/05/01 19:22:03.033057] Pco::Camera::_init (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:971): m_log: 
*** _init (linux) [2020/05/01 19:22:01]
*** _pco_GetCameraType
*** pco_GetPixelRate
    pixRateActual[274000000] pixRateNext[274000000] err[0]
*** __pco_GetLut err[-2147282912]*** _pco_SetRecordingState(0) err[0]
[2020/05/01 19:22:03.033078] Pco::Camera::_init (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:973): _init [EXIT]


===

[2020/05/01 14:35:22.947039] Pco::Camera::_init (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:722): [ENTRY]
[2020/05/01 14:35:22.947047] Pco::Camera::_init (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:738): setting the log
[2020/05/01 14:35:22.947056] Pco::Camera::_init (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:740): ++++++++++++++ _pco_Open_Cam
[2020/05/01 14:35:22.947068] Pco::Camera::_pco_Open_Cam (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdkLin.cpp:249): creating the camera


[2020/05/01 14:35:22.947080] Pco::Camera::_pco_Open_Cam (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdkLin.cpp:286): 
debugSdk_getdebugSdk_get=65535

[2020/05/01 14:35:22.947089] Pco::Camera::_pco_Open_Cam (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdkLin.cpp:288): BEFORE Try to open Camera
[2020/05/01 14:35:24.001447] Pco::Camera::_pco_Open_Cam (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdkLin.cpp:290): AFTER Try to open Cameraerr=0
[2020/05/01 14:35:24.001511] Pco::Camera::_pco_Open_Cam (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdkLin.cpp:299): After open Camera

[2020/05/01 14:35:24.001521] Pco::Camera::_init (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:754): ++++++++++++++ _pco_GetCameraType
[2020/05/01 14:35:24.001529] Pco::Camera::_pco_GetCameraType (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdk.cpp:2021): _pco_GetCameraType
[2020/05/01 14:35:24.002290] Pco::Camera::PcoCheckError (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:1460): PCO ERROR: msg=Firmware error 8003101e at device 'SC2 Main uP': Value is out of range. [/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdk.cpp][2060], err=-2147282914 = 0xffffffff8003101e
[2020/05/01 14:35:24.003551] Pco::Camera::_pco_GetCameraType (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdk.cpp:2071): 
   GetCameraType: camtype=4928 = 0x1340, m_pcoData->model=PCO EDGE hs
                  serialnumber=61007634
                  iftype=7, m_pcoData->iface=CAMERALINK_HS
                  m_pcoData->camera_name=PCO EDGE hs (IF CAMERALINK_HS) (SN 61007634)
      GetInfo(0): m_pcoData->nameCamIf=
      GetInfo(1): m_pcoData->nameCam=pco.edge 4.2 M CLHS rolling shutter
      GetInfo(2): m_pcoData->nameSensor=S001908030 PCB013206731




[2020/05/01 14:35:24.003622] Pco::Camera::_init (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:761): ++++++++++++++ _pco_Open_Grab

[2020/05/01 14:35:24.003642] Pco::Camera::_pco_Open_Grab (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdkLin.cpp:324): 
Open Grabber
wInterfaceType=7, 
camtype=4928=0x1340, 
sCamType=PCO EDGE hs, 
sCamSubType=, 
sInterfaceType=CAMERALINK_HS


[2020/05/01 14:35:24.003662] Pco::Camera::_pco_Open_Grab (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdkLin.cpp:373): Grabber is CLHS

+++++++++++++++++++=Logging set to 0xffff

[2020/05/01 14:35:24.003691] Pco::Camera::_pco_Open_Grab (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdkLin.cpp:385): Try to open Grabber

[2020/05/01 14:35:24.003723] Pco::Camera::_init (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:764): ++++++++++++++ _pco_GetCameraInfo
[2020/05/01 14:35:24.004611] Pco::Camera::_pco_GetCameraInfo (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdkLin.cpp:116): 
   step_exp_time=9.664e-06, step_lat_time=1e-05
   min_exp_time0=0.0001, max_exp_time0=10
   min_lat_time0=0, max_lat_time0=1
   min_exp_time=9.0336e-05, max_exp_time=10
   min_lat_time=0, max_lat_time=1.00001

[2020/05/01 14:35:24.005056] Pco::Camera::_pco_GetCameraInfo (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdkLin.cpp:176): 
   iPixelRateValidNr=2
   validPixelRate=validRates:  [100000000]  [274000000]

[2020/05/01 14:35:24.005092] Pco::Camera::_init (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:767): ++++++++++++++ _pco_ResetSettingsToDefault
[2020/05/01 14:35:24.019319] Pco::Camera::_init (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:770): ++++++++++++++ _pco_SetCameraToCurrentTime
[2020/05/01 14:35:24.019685] Pco::Camera::_init (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:773): ++++++++++++++ _pco_GetTransferParameter

[2020/05/01 14:35:24.019706] Pco::Camera::_pco_GetTransferParameter (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdk.cpp:4315): 
   clpar.baudrate=234822943
   clpar.ClockFrequency=270663679
   clpar.DataFormat=4294907938
   clpar.Transmit=503578623

[2020/05/01 14:35:24.019743] Pco::Camera::_init (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:776): ++++++++++++++ _pco_GetTemperatureInfo

[2020/05/01 14:35:24.020455] Pco::Camera::_pco_GetTemperatureInfo (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdk.cpp:1765): 
Temperature (C):
               CCD  sTempCcd=70
            Camera   sTempCam=41
      Power Supply   sTempPS=39
   Cooling Setpoint  sCoolingSetpoint=7


[2020/05/01 14:35:24.020496] Pco::Camera::_init (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:779): ++++++++++++++ pco_GetPixelRate
[2020/05/01 14:35:24.020877] Pco::Camera::_pco_GetPixelRate (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdk.cpp:2343): 
   pixRateActual=274000000
   pixRateNext=274000000

[2020/05/01 14:35:24.020905] Pco::Camera::_init (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:782): 
pixRateActual=274000000, pixRateNext=274000000

[2020/05/01 14:35:24.020918] Pco::Camera::_init (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:784): ++++++++++++++ _pco_GetLut
[2020/05/01 14:35:24.021293] Pco::Camera::PcoCheckError (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:1460): PCO ERROR: msg=Firmware error 80031020 at device 'SC2 Main uP': Command/data not supported by this hardware. [/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdkLin.cpp][232], err=-2147282912 = 0xffffffff80031020
[2020/05/01 14:35:24.021318] Pco::Camera::_init (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:787): ++++++++++++++ _pco_SetRecordingState
[2020/05/01 14:35:24.021662] Pco::Camera::_init (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:792): ++++++++++++++ _pco_initHWIOSignal

[2020/05/01 14:35:24.022036] Pco::Camera::_pco_GetHWIOSignalAll (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdk.cpp:1549): 
--- sizeiSignalMax=5, m_pcoData->wNrPcoHWIOSignal0=5, m_pcoData->wNrPcoHWIOSignal=5
[2020/05/01 14:35:24.022057] Pco::Camera::_pco_GetHWIOSignalAll (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdk.cpp:1560): 
---  descriptoriSignal=0, m_pcoData->stcPcoHWIOSignalDesc[iSignal].wSize=109
SignalNum = 0 0
[2020/05/01 14:35:24.023540] Pco::Camera::_pco_GetHWIOSignalAll (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdk.cpp:1590): 
---  signal name iSignal=0, sizeName=204, ptrName=HWIOSignalDescriptor for Output 0
possible selections:
0: Exposure Trigger
selectable signal types:
TTL
selectable signal polarity:
Rising edge active
Falling edge active
selectable filter settings:
High

[2020/05/01 14:35:24.023988] Pco::Camera::_pco_GetHWIOSignalAll (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdk.cpp:1614): 
---  iSignal=0, wEnabled=1, wType=1, wPolarity=4, wFilterSetting=0, wSelected=0
[2020/05/01 14:35:24.024011] Pco::Camera::_pco_GetHWIOSignalAll (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdk.cpp:1560): 
---  descriptoriSignal=1, m_pcoData->stcPcoHWIOSignalDesc[iSignal].wSize=109
SignalNum = 1 1
[2020/05/01 14:35:24.025476] Pco::Camera::_pco_GetHWIOSignalAll (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdk.cpp:1590): 
---  signal name iSignal=1, sizeName=204, ptrName=HWIOSignalDescriptor for Output 1
possible selections:
0: Acquire Enable
selectable signal types:
TTL
selectable signal polarity:
Low level active
High level active
selectable filter settings:
Off
Medium

[2020/05/01 14:35:24.025906] Pco::Camera::_pco_GetHWIOSignalAll (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdk.cpp:1614): 
---  iSignal=1, wEnabled=1, wType=1, wPolarity=1, wFilterSetting=0, wSelected=0
[2020/05/01 14:35:24.025926] Pco::Camera::_pco_GetHWIOSignalAll (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdk.cpp:1560): 
---  descriptoriSignal=2, m_pcoData->stcPcoHWIOSignalDesc[iSignal].wSize=109
SignalNum = 2 2
[2020/05/01 14:35:24.027397] Pco::Camera::_pco_GetHWIOSignalAll (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdk.cpp:1590): 
---  signal name iSignal=2, sizeName=201, ptrName=HWIOSignalDescriptor for Output 2
possible selections:
0: Status Busy
selectable signal types:
TTL
selectable signal polarity:
Low level active
High level active
selectable filter settings:
Off
Medium

[2020/05/01 14:35:24.027831] Pco::Camera::_pco_GetHWIOSignalAll (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdk.cpp:1614): 
---  iSignal=2, wEnabled=1, wType=1, wPolarity=1, wFilterSetting=0, wSelected=0
[2020/05/01 14:35:24.027852] Pco::Camera::_pco_GetHWIOSignalAll (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdk.cpp:1560): 
---  descriptoriSignal=3, m_pcoData->stcPcoHWIOSignalDesc[iSignal].wSize=109
SignalNum = 3 3
[2020/05/01 14:35:24.029367] Pco::Camera::_pco_GetHWIOSignalAll (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdk.cpp:1590): 
---  signal name iSignal=3, sizeName=217, ptrName=HWIOSignalDescriptor for Output 3
possible selections:
0: Status Expos
1: Status Line
selectable signal types:
TTL
selectable signal polarity:
Low level active
High level active
selectable filter settings:
Off
Medium

[2020/05/01 14:35:24.029775] Pco::Camera::_pco_GetHWIOSignalAll (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdk.cpp:1614): 
---  iSignal=3, wEnabled=1, wType=1, wPolarity=1, wFilterSetting=0, wSelected=0
[2020/05/01 14:35:24.029796] Pco::Camera::_pco_GetHWIOSignalAll (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdk.cpp:1560): 
---  descriptoriSignal=4, m_pcoData->stcPcoHWIOSignalDesc[iSignal].wSize=109
SignalNum = 4 4
[2020/05/01 14:35:24.031285] Pco::Camera::_pco_GetHWIOSignalAll (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdk.cpp:1590): ---  signal name iSignal=4, sizeName=152, ptrName=HWIOSignalDescriptor for Output 4
possible selections:
0: CLHS Trigger
selectable signal types:
None
selectable signal polarity:
None
selectable filter settings:
None

[2020/05/01 14:35:24.031685] Pco::Camera::_pco_GetHWIOSignalAll (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdk.cpp:1614): 
---  iSignal=4, wEnabled=0, wType=1, wPolarity=1, wFilterSetting=0, wSelected=0
[2020/05/01 14:35:24.032084] Pco::Camera::_pco_initHWIOSignal (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdk.cpp:3119): 
set PcoHWIOSignal polarity name=Exposure Trigger, sigNum=0, wSelected=0, wPolarity=4, sSignalPolarity=Rising edge active

[2020/05/01 14:35:24.032439] Pco::Camera::_init (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:954): [EXIT]
[2020/05/01 14:35:24.032455] Pco::Camera::Camera (/users/blissadm/lima/lima/camera/pco/src/PcoCameraLin.cpp:1506): ... new _AcqThread (Acq) & start
[2020/05/01 14:35:24.032512] Pco::Camera::Camera (/users/blissadm/lima/lima/camera/pco/src/PcoCameraLin.cpp:1510): ... new _AcqThread (Switch) & start
[2020/05/01 14:35:24.032613] _AcqThread::Camera::threadFunction (/users/blissadm/lima/lima/camera/pco/src/PcoCameraLin.cpp:153): +++ START threadFunction_Edge_clhs
[2020/05/01 14:35:24.032680] _AcqThread::Camera::threadFunction_Edge_clhs (/users/blissadm/lima/lima/camera/pco/src/PcoCameraLin.cpp:992): threadFunction_Edge_clhs[ENTRY]
[2020/05/01 14:35:24.032706] _AcqThread::Camera::threadFunction_Edge_clhs (/users/blissadm/lima/lima/camera/pco/src/PcoCameraLin.cpp:1040): m_cam.m_wait_flag=1, m_cam.m_quit=0, _nb_frames=-1
[2020/05/01 14:35:24.032730] Pco::Camera::setRequestStop (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:471): m_requestStop0=-1487348944, m_requestStop=0, m_requestStopRetry=0, requestStop=0
[2020/05/01 14:35:24.032766] _AcqThread::Camera::threadFunction (/users/blissadm/lima/lima/camera/pco/src/PcoCameraLin.cpp:129): +++ START threadFunction_SwitchEdge
[2020/05/01 14:35:24.032804] _AcqThread::Camera::threadFunction_SwitchEdge (/users/blissadm/lima/lima/camera/pco/src/PcoCameraLin.cpp:2048): m_cam.m_wait_flag_rolling=1, m_cam.m_quit_rolling=0
=================================================
   mem_factor: org[70]
=================================================
[2020/05/01 14:35:24.220126] Lima.Server.LimaCCDs::LimaCCDs::apply_config: Applied config : /users/opd05/lima_edgehslin.cfg : default 





#===================================================
# 2020/04/29 - debug CLHS
#===================================================



[2020/04/30 15:54:23.063593] Pco::Camera::_pco_GetHWIOSignalAll (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdk.cpp:1614): ---  iSignal=4, wEnabled=0, wType=1, wPolarity=1, wFilterSetting=0, wSelected=0
[2020/04/30 15:54:23.063961] Pco::Camera::_pco_initHWIOSignal (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdk.cpp:3119): set PcoHWIOSignal polarity name=Exposure Trigger, sigNum=0, wSelected=0, wPolarity=4, sSignalPolarity=Rising edge active
[2020/04/30 15:54:23.064315] Pco::Camera::_init (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:954): [EXIT]
[2020/04/30 15:54:23.064330] Pco::Camera::Camera (/users/blissadm/lima/lima/camera/pco/src/PcoCameraLin.cpp:1486): ... new _AcqThread (Acq)
[2020/04/30 15:54:23.064382] Pco::Camera::Camera (/users/blissadm/lima/lima/camera/pco/src/PcoCameraLin.cpp:1490): ... new _AcqThread (Sw)
[2020/04/30 15:54:23.064504] _AcqThread::Camera::threadFunction (/users/blissadm/lima/lima/camera/pco/src/PcoCameraLin.cpp:153): +++ START threadFunction_Edge
[2020/04/30 15:54:23.064574] _AcqThread::Camera::threadFunction_Edge (/users/blissadm/lima/lima/camera/pco/src/PcoCameraLin.cpp:585): [entry]
[2020/04/30 15:54:23.064596] _AcqThread::Camera::threadFunction_Edge (/users/blissadm/lima/lima/camera/pco/src/PcoCameraLin.cpp:978): [exit]
[2020/04/30 15:54:23.064618] _AcqThread::Camera::threadFunction (/users/blissadm/lima/lima/camera/pco/src/PcoCameraLin.cpp:160): ABORT - camera not supported!!!
[2020/04/30 15:54:23.064646] _AcqThread::Camera::threadFunction (/users/blissadm/lima/lima/camera/pco/src/PcoCameraLin.cpp:129): +++ START threadFunction_SwitchEdge
[2020/04/30 15:54:23.064682] _AcqThread::Camera::threadFunction_SwitchEdge (/users/blissadm/lima/lima/camera/pco/src/PcoCameraLin.cpp:2028): m_cam.m_wait_flag_rolling=1, m_cam.m_quit_rolling=0
[2020/04/30 15:54:23.064702] Pco::Camera::setRequestStop (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:471): m_requestStop0=-2098635984, m_requestStop=0, m_requestStopRetry=0, requestStop=0
***** Thread 7f2eb1ef6700 function exited due to an exception without clean-up! *****
=================================================
   mem_factor: org[70]
=================================================
[2020/04/30 15:54:23.245057] Lima.Server.LimaCCDs::LimaCCDs::apply_config: Applied config : /users/opd05/lima_edgehslin.cfg : default 
^C[2020/04/30 16:00:47.693206] Pco::Interface::stopAcq (/users/blissadm/lima/lima/camera/pco/src/PcoInterface.cpp:156): [ENTRY]
[2020/04/30 16:00:47.693266] Pco::Camera::stopAcq (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:403): --- [ENTRY]
[2020/04/30 16:00:47.693278] Pco::Camera::getStarted (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:553): m_started=0
[2020/04/30 16:00:47.693290] Pco::Camera::setRequestStop (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:471): m_requestStop0=0, m_requestStop=1, m_requestStopRetry=1, requestStop=1
[2020/04/30 16:00:47.693302] Pco::Camera::getStarted (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:553): m_started=0
[2020/04/30 16:00:47.693311] Pco::Camera::stopAcq (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:428):  [exit]: _started0=0, _started=0, _stopRequestIn=0, _stopRequestOut=0, _nrStop=0, resWait=0
... close_interface()
[2020/04/30 16:00:47.694128] Pco::Camera::stopAcq (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:403): --- [ENTRY]
[2020/04/30 16:00:47.694146] Pco::Camera::getStarted (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:553): m_started=0
[2020/04/30 16:00:47.694156] Pco::Camera::setRequestStop (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:471): m_requestStop0=1, m_requestStop=1, m_requestStopRetry=2, requestStop=1
[2020/04/30 16:00:47.694168] Pco::Camera::getStarted (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:553): m_started=0
[2020/04/30 16:00:47.694176] Pco::Camera::stopAcq (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:428):  [exit]: _started0=0, _started=0, _stopRequestIn=1, _stopRequestOut=0, _nrStop=1, resWait=0
[2020/04/30 16:00:47.839504] Pco::Camera::_pco_ResetLib (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdk.cpp:3958): INFO: function does NOT exists in linux [_pco_ResetLib]
(limadev) lbm05pco5:~ % 


lbm05pco5:pco_camera-org/pco_clhs/bin % ./pco_camera_grab 
Logging set to 0x000ff0ff
Try to open Camera
Grabber is CPco_grab_clhs
Try to open Grabber
Camera Name is: pco.edge 4.2 M CLHS rolling shutter
Camera Typ is : 0x1340
Camera Serial : 61007634
current temperatures
Camera:      40°C
Sensor:      70°C
PowerSupply: 40°C
actual PixelRate: 274000000
possible PixelRates:
0: 100000000
1: 274000000
actual Triggermode: 0 Auto
actual Binning: 1x1
actual ROI: 1-2048, 1-2048
Actual Resolution 2048 x 2048

 actual recording state RUN actual freq: 99.879Hz time/pic: 10.01ms  datarate:799.03MB/sec 

x to close camera and program   actual values
l to set loop_count              loop_count      1
c to set imagecount              imagecount      100
t to set picture timeout         timeout         10000ms
e to set exposure time           exposuretime    10002us
d to set delay time              delaytime       0us
p to set camera pixelrate        pixelrate       274000000Hz
a to set triggermode             triggermode     Auto
b to set binning                 binning         1x1

0 to set recording state to OFF
1 to set recording state to ON
2 Single Acquire_Image (recording camera)
3 Single Get_Image (recording camera or camera recorder buffer) 
4 Loop Acquire_Image
5 Loop Wait_Next_Image



/users/blissadm/lima/lima/camera/pco/src/PcoCameraLin.cpp:1114:52: error: no matching function for call to 'CPco_grab_clhs::Start_Acquire(int&)'
             err = grabber->Start_Acquire(_nb_frames);
                                                    ^

/users/blissadm/lima/lima/camera/pco/src/PcoCameraLin.cpp:1143:52: error: no matching function for call to 'CPco_grab_clhs::Start_Acquire(int&)'
             err = grabber->Start_Acquire(_nb_frames);
                                                    ^

/users/blissadm/lima/lima/camera/pco/src/PcoCameraLin.cpp:1206:32: error: 'class CPco_grab_clhs' has no member named 'Check_DMA_Length'
                 err = grabber->Check_DMA_Length(pcoBuffIdx);
                                ^~~~~~~~~~~~~~~~
/users/blissadm/lima/lima/camera/pco/src/PcoCameraLin.cpp:1239:28: error: 'class CPco_grab_clhs' has no member named 'Get_Framebuffer_adr'; did you mean 'Free_Framebuffer'?
             err = grabber->Get_Framebuffer_adr(pcoBuffIdx, &pcoBuffPtr);
                            ^~~~~~~~~~~~~~~~~~~
                            Free_Framebuffer
/users/blissadm/lima/lima/camera/pco/src/PcoCameraLin.cpp:1253:26: error: 'class CPco_grab_clhs' has no member named 'Extract_Image'; did you mean 'Get_Image'?
                 grabber->Extract_Image(limaBuffPtr, pcoBuffPtr, width,
                          ^~~~~~~~~~~~~
                          Get_Image
/users/blissadm/lima/lima/camera/pco/src/PcoCameraLin.cpp:1274:28: error: 'class CPco_grab_clhs' has no member named 'Unblock_buffer'
             err = grabber->Unblock_buffer(pcoBuffIdx);
                            ^~~~~~~~~~~~~~





===

[2020/04/29 16:17:49.083903] Pco::Camera::_init (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:722): [ENTRY]
[2020/04/29 16:17:49.083911] Pco::Camera::_init (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:738): setting the log
[2020/04/29 16:17:49.083920] Pco::Camera::_init (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:740): ++++++++++++++ _pco_Open_Cam
[2020/04/29 16:17:49.083934] Pco::Camera::_pco_Open_Cam (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdkLin.cpp:249): creating the camera
[2020/04/29 16:17:49.083952] Pco::Camera::_pco_Open_Cam (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdkLin.cpp:286): debugSdk_getdebugSdk_get=65535
[2020/04/29 16:17:49.083962] Pco::Camera::_pco_Open_Cam (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdkLin.cpp:288): BEFORE Try to open Camera
[2020/04/29 16:17:50.000408] Pco::Camera::_pco_Open_Cam (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdkLin.cpp:290): AFTER Try to open Cameraerr=0
[2020/04/29 16:17:50.000475] Pco::Camera::_pco_Open_Cam (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdkLin.cpp:299): After open Camera
[2020/04/29 16:17:50.000492] Pco::Camera::_init (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:754): ++++++++++++++ _pco_GetCameraType
[2020/04/29 16:17:50.000506] Pco::Camera::_pco_GetCameraType (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdk.cpp:2024): _pco_GetCameraType
[2020/04/29 16:17:50.000894] Pco::Camera::_pco_GetCameraType (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdk.cpp:2060): 
   m_pcoData->model=PCO EDGE hs
   m_pcoData->iface=CAMERALINK_HS
   m_pcoData->camera_name=PCO EDGE hs (IF CAMERALINK_HS) (SN 61007634)

[2020/04/29 16:17:50.001305] Pco::Camera::PcoCheckError (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:1460): 
PCO ERROR: msg=Firmware error 8003101e at device 'SC2 Main uP': Value is out of range. 
[/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdk.cpp][2066], err=-2147282914 = 0xffffffff8003101e


[2020/04/29 16:17:50.002595] Pco::Camera::_pco_GetCameraType (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdk.cpp:2074): 
   m_pcoData->nameCamIf=
   m_pcoData->nameCam=pco.edge 4.2 M CLHS rolling shutter
   m_pcoData->nameSensor=S001908030 PCB013206731

[2020/04/29 16:17:50.002636] Pco::Camera::_init (/users/blissadm/lima/lima/camera/pco/src/PcoCamera.cpp:761): ++++++++++++++ _pco_Open_Grab
[2020/04/29 16:17:50.002656] Pco::Camera::_pco_Open_Grab (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdkLin.cpp:322): Open GrabbersCamType=PCO EDGE hs, sCamSubType=, sInterfaceType=CAMERALINK_HS
[2020/04/29 16:17:50.222909] Pco::Camera::_pco_Open_Grab (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdkLin.cpp:359): Exception(Error): Camera is not supported [thrown]
-------> An unforeseen exception occurred.... Hardware: _pco_Open_Grab(/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdkLin.cpp, 359): Error: Camera is not supported


---------------------------------------------------------------------------
15:17:07.690 Cpco_clhs->cameracount() : 1 err 0x0
Camera 0:
 Vendor        : PCO AG
 Model         : pco.edge 4.2 M CLHS rolling shutter
 Serial        : 61007634
 Port [g.p]    :   00.00   
 PortID        :    0000   
 LLDeviceID    : 0x00000001
 sensor_width  : 2048 
 sensor_height : 2048 
 sensor_bitpix : 16 
cam->acquire_ports   : 1 
cam->connected_ports : 1 

[2020/04/30 11:16:21.002616] Pco::Camera::_pco_GetCameraType (/users/blissadm/lima/lima/camera/pco/src/PcoCameraSdk.cpp:2074): 
   GetCameraType: camtype=4928, m_pcoData->model=PCO EDGE hs
                  serialnumber=61007634
                  iftype=7, m_pcoData->iface=CAMERALINK_HS
                  m_pcoData->camera_name=PCO EDGE hs (IF CAMERALINK_HS) (SN 61007634)
      GetInfo(0): m_pcoData->nameCamIf=
      GetInfo(1): m_pcoData->nameCam=pco.edge 4.2 M CLHS rolling shutter
      GetInfo(2): m_pcoData->nameSensor=S001908030 PCB013206731

// pco.edge types
#define CAMERATYPE_PCO_EDGE                  0x1300 // pco.edge 5.5 (Sensor CIS2521) Interface: CameraLink , rolling shutter
#define CAMERATYPE_PCO_EDGE_42               0x1302 // pco.edge 4.2 (Sensor CIS2020) Interface: CameraLink , rolling shutter
#define CAMERATYPE_PCO_EDGE_GL               0x1310 // pco.edge 5.5 (Sensor CIS2521) Interface: CameraLink , global  shutter
#define CAMERATYPE_PCO_EDGE_USB3             0x1320 // pco.edge     (all sensors   ) Interface: USB 3.0    ,(all shutter modes)
#define CAMERATYPE_PCO_EDGE_HS               0x1340 // pco.edge     (all sensors   ) Interface: high speed ,(all shutter modes) 
#define CAMERATYPE_PCO_EDGE_MT               0x1304 // pco.edge MT2 (all sensors   ) Interface: CameraLink Base, rolling shutter


#define CAMERASUBTYPE_PCO_EDGE_SPRINGFIELD   0x0006
#define CAMERASUBTYPE_PCO_EDGE_31            0x0031
#define CAMERASUBTYPE_PCO_EDGE_42            0x0042
#define CAMERASUBTYPE_PCO_EDGE_55            0x0055
#define CAMERASUBTYPE_PCO_EDGE_DEVELOPMENT   0x0100
#define CAMERASUBTYPE_PCO_EDGE_X2            0x0200
#define CAMERASUBTYPE_PCO_EDGE_RESOLFT       0x0300
#define CAMERASUBTYPE_PCO_EDGE_GOLD          0x0FF0
#define CAMERASUBTYPE_PCO_EDGE_DUAL_CLOCK    0x000D
#define CAMERASUBTYPE_PCO_EDGE_DICAM         0xDC00
#define CAMERASUBTYPE_PCO_EDGE_42_LT         0x8042




#===================================================
# 2020/04/25 - params
#===================================================
(limadev1) lid19frelon1:~ % LimaCCDs dimaxlin
============= Properties =============
         keys: {'bitAlignment': 'MSB', 'debug_type_info': 'fat(1) err(2) war(4) trac(8)', 'trigSingleMulti': '1'}
       params: ['bitAlignment=MSB', 'trigSingleMulti=1', 'logBits=0', 'logBits_info=FFFF', 'logPath=/tmp']
     paramsIn: bitAlignment=MSB;trigSingleMulti=1;logBits=0;logBits_info=FFFF;logPath=/tmp;
debug_control: [0] [0x0]
 debug_module: [0xffffffff] [0xffffffff]
 debug_format: [0x31] [0x31]
   debug_type: [0xffff] [0xffff]
   mem_factor: [0] [0x0]
======================================

# --- id19/limapco/dimaxlin properties
id19/limapco/dimaxlin->bitAlignment: MSB
id19/limapco/dimaxlin->debug_control: 0
id19/limapco/dimaxlin->debug_format: 0x31
id19/limapco/dimaxlin->debug_module: 0xffffffff
id19/limapco/dimaxlin->debug_type: 0xffff
id19/limapco/dimaxlin->debug_type_info: "fat(1) err(2) war(4) trac(8)"
id19/limapco/dimaxlin->params: bitAlignment=MSB,\ 
                               trigSingleMulti=1,\ 
                               logBits=0,\ 
                               logBits_info=FFFF,\ 
                               "logPath=/tmp"
id19/limapco/dimaxlin->trigSingleMulti: 1

============= Properties =============
         keys: {'bitAlignment': 'MSB', 'debug_type_info': 'fat(1) err(2) war(4) trac(8)', 'trigSingleMulti': '1'}
       params: ['bitAlignment=MSB', 'trigSingleMulti=1', 'logBits=0', 'logBits_info=FFFF', 'logPath=/tmp']
     paramsIn: logPath=/tmp;bitAlignment=MSB;debug_type_info=fat(1) err(2) war(4) trac(8);trigSingleMulti=1;
debug_control: [0] [0x0]
 debug_module: [0xffffffff] [0xffffffff]
 debug_format: [0x31] [0x31]
   debug_type: [0xffff] [0xffff]
   mem_factor: [0] [0x0]
======================================
============= Properties =============
         keys: {'bitAlignment': 'MSB', 'debug_type_info': 'fat(1) err(2) war(4) trac(8)', 'logBits': '0', 'logBits_info': 'FFFF', 'logPath': '/tmp', 'trigSingleMulti': '1'}
       params: ['bitAlignment=MSB', 'trigSingleMulti=1']
     paramsIn: bitAlignment=MSB;trigSingleMulti=1;bitAlignment=MSB;debug_type_info=fat(1) err(2) war(4) trac(8);logBits=0;logBits_info=FFFF;logPath=/tmp;trigSingleMulti=1;
======================================




#===================================================
# 2019/10/03 - traceAcq (linux) to update
#===================================================

* fnId[threadFunction_Edge] nrEvents[0]

* ... fnIdXfer[(null)]
        ok m_cam.m_pcoData->traceAcq.fnIdXfer = fnId;
      

* ... testCmdMode [0x1]

* msExposure[25] msDelay[0]
* ... msLimaExposure[0] Pco exposure[0] base[0]
         "* ... msLimaExposure[%g] Pco exposure[%d] base[%d]\n",
         m_pcoData->traceAcq.dLimaExposure * 1000.,
         m_pcoData->traceAcq.iPcoExposure,
         m_pcoData->traceAcq.iPcoExposureBase);



* ... msLimaDelay[0] Pco delay[0] base[0]


* pcoBin horz[0] vert[0]
* limaRoi xy0[0,0] xy1[2559,2159] size[2560,2160]
* ... pcoRoi x[0,0] y[0,0]
* ... imgSize[11059200 B] totSize[1105920000 B][1054.69 MB]

* nrImgRequested[100] nrImgAcquired[0]
    m_pcoData->traceAcq.nrImgRequested, m_pcoData->traceAcq.nrImgAcquired);

* ... nrImgRequested0[0] nrImgRecorded[0] maxImgCount[0]

* limaTriggerMode[(null)]
                m_pcoData->traceAcq.sLimaTriggerMode);

* ... pcoTriggerMode[(null)] [0]
                m_pcoData->traceAcq.sPcoTriggerMode,
                m_pcoData->traceAcq.iPcoTriggerMode);

* ... pcoAcqMode[(null)] [0]
                m_pcoData->traceAcq.sPcoTriggerMode,
                m_pcoData->traceAcq.iPcoTriggerMode);




* msStartAcqStart[0]  msStartAcqEnd[1059]
* ... usTicks[0][1058.515] (ms)   (total execTime)
* ... usTicks[1][0.466] (ms)   (Lima execTime)
* ... usTicks[3][1057.997] (ms)   (SDK execTime)
* ... usTicks[4][2.653] (ms)   (PCO_GetRecordingState execTime)
* ... usTicks[5][10.541] (ms)   (PCO_SetRecordingState execTime)
* ... usTicks[6][0.000] (ms)   (PCO_CancelImages execTime)

* msImgCoc[100] fps[10] msTout[0] msTotal[0]
* ... msRecordLoop[0] msRecord[0] endRecord[]

* ... msXfer[1037] endXfer[2019/10/04 11:04:45]
        ok m_pcoData->traceAcq.msXfer,
        ok getTimestamp(Iso, m_pcoData->traceAcq.endXferTimestamp));

* ... xferTimeTot[1.037 s] xferSpeed[101.706 MB/s][9.6432 fps]
        totTime, xferSpeed, framesPerSec);
        ok totTime = m_pcoData->traceAcq.msXfer / 1000.;
        ok xferSpeed = mbTotSize / totTime;
        ok framesPerSec = m_pcoData->traceAcq.nrImgRequested / totTime;


* ... checkImgNr[true] pco[10] lima[10] diff[0] order[0]
        ok





#===================================================
# 2018/09/04 / upgrade of the firmware of pco edge hs (bm05)
#  new fw for CLHS doesn't allow LUT functions
#  fixed -> bypass LUT functions for CLHS
#===================================================

$Id: comp[2017/07/12 09:24:19] file[2017/07/12 08:55:04] [..\..\..\..\src\PcoCamera.cpp] $
$Id: comp[2017/07/12 09:14:15] file[2017/07/12 08:55:04] [..\..\..\..\src\PcoSyncCtrlObj.cpp] $
$Id: comp[2017/07/12 09:14:17] file[2017/07/12 08:55:04] [..\..\..\..\src\PcoInterface.cpp] $
$Id: comp[2017/07/12 09:14:28] file[2017/07/12 08:55:04] [..\..\..\..\src\PcoBufferCtrlObj.cpp] $
$Id: comp[2017/07/12 09:14:20] file[2017/07/12 08:55:04] [..\..\..\..\src\PcoDetInfoCtrlObj.cpp] $
$Id: comp[2017/07/12 09:14:21] file[2017/07/12 08:55:04] [..\..\..\..\src\PcoCameraUtils.cpp] $
$Id: comp[2017/07/12 09:14:16] file[2017/07/12 08:55:04] [..\..\..\..\src\PcoRoiCtrlObj.cpp] $
$Id:       PCO rev[2017-07-12 08:15:38 +0200] head[eae3c10][eae3c108127ae99d6f68747a3240179147fa42f8] ref[ (HEAD, gitrh/pco-dev02, pco-dev02)] at [2017/07/12 09:22:50] $
$Id:    PCOSDK [1.20] $
$Id:   PROCLIB rev[2017-03-07 10:24:42 +0100] head[c80632d][c80632d5298bd81c4feb7cca52f7619884d9371e] ref[ (HEAD)] at [2017/07/12 09:22:50] $
$Id: LIBCONFIG rev[2013-02-07 18:08:29 +0100] head[89c411a][89c411a541d4ab4d66257ccb85749853fd685cbb] ref[ (HEAD, github/master, github/HEAD, master)] at [2017/07/12 09:22:50] $
$Id:      LIMA rev[2017-07-07 11:15:03 +0200] head[cb35d0f][cb35d0f3a77e09381c5e149d3463d28dd7870067] ref[ (HEAD, tag: tango-camera-pco-1.7.5, github/core-1.7, core-1.7)] at [2017/07/12 09:22:50] $
$Id:     TANGO rev[2017-07-07 11:15:03 +0200] head[a0f38d2][a0f38d21199cc95f5e2a832478b534977b0249fb] ref[ (HEAD, github/master, github/HEAD, master)] at [2017/07/12 09:22:50] $
$Id:      SPEC rev[2017-07-06 16:48:28 +0200] head[ea1013d][ea1013d3628c9cba1fd2491ebb4ed834e42eac24] ref[ (HEAD)] at [2017/07/12 09:22:50] $

       timestamp: 2018/09/04 15:15:27
   computer name: WBM05PCO3
       user name: opd05
VS configuration: platform[x64] configuration[Release]
 PCO SDK version: file[sc2_cam.dll] ver[1.20.1]

* PCO EDGE hs (EDGE_42) (I/F CAMERALINK_HS) (SN 61003169)

--- 2018/09/04 15:21:38 lima::Pco::Camera::prepareAcq [ENTRY]

lima::Pco::SyncCtrlObj::xlatLimaTrigMode2Pco (..\..\..\..\src\PcoSyncCtrlObj.cpp:290):
 ... sLimaTriggerMode=IntTrig
 ... sPcoTriggerMode=auto, pcoTrigMode=0, extTrig=0
 ... sPcoAcqMode=acqEnbl_Ignored, pcoAcqMode=0
lima::Pco::Camera::_pco_SetTransferParameter_SetActiveLookupTable (..\..\..\..\src\PcoCameraSdkAdd.cpp:2393): LIMA_HW_EXC ===> PCO_GetActiveLookupTable Pco
Error[0x80031020][Firmware error 80031020 at device 'SC2 Main uP': Command/data not supported by this hardware. [..\..\..\..\src\PcoCameraSdkAdd.cpp][2392]
] error[0x80031020]


#===================================================
# 2018/09/04 / new server directory struture
#  new fw for CLHS doesn't allow LUT functions
#===================================================

shorcut:
   %comspec% /k ""C:\blissadm\Lima\pco\bat\lima_pco_ds2.bat"" install-beta edgehs 160.103.125.104

"install folders" dir --->  C:\blissadm\Lima\pco
            "bat" dir --->  C:\blissadm\Lima\pco\bat  (copied from the "install file"

C:\blissadm\Lima\pco>tree /F /A
+---bat                    <---- this file is a copy of the distributed in "install"
|       lima_pco_ds.bat                                            |
|       lima_pco_ds2.bat                                           |
|       logsbackup.bat                                             |
|       logsoff.bat                                                |
|       logson.bat                                                 | 
                                                                   | 
                                                                   | 
                                                                   | 
                                                                   | 
C:\blissadm\Lima\pco\install-beta>tree /F /A                       |
                                                                   | 
                                                                   | 
|   INSTALL_VERSION.txt                                            |
|   sip.pyd                                                        |
|                                                                  | 
+---bat                    <---------------------------------------
|       lima_pco_ds.bat
|       lima_pco_ds2.bat
|       logsbackup.bat
|       logsoff.bat
|       logson.bat
|
\---Lima
    |   Core.py
    |   Debug.py
    |   libconfig++.dll
    |   LibLimaCore.dll
    |   liblimapco.dll
    |   libprocesslib.dll
    |   limacore.pyd
    |   limapco.pyd
    |   Pco.py
    |   Pco.pyc
    |   processlib.pyd
    |   SC2_Cam.dll
    |   sc2_clhs.dll            ---> copied from sc2_clhs_v1.3.32.dll 
    |   sc2_clhs_org.dll        ---> sc2_clhs.dll original
    |   sc2_clhs_v1.3.32.dll    ---> copied to sc2_clhs.dll
    |   sc2_cl_me4.dll
    |   __init__.py
    |
    \---Server
        |   AttrHelper.py
        |   AttrHelper.pyc
        |   EnvHelper.py
        |   EnvHelper.pyc
        |   LimaCCDs.py
        |   __init__.py
        |
        +---camera
        |       Pco.py
        |       __init__.py
        |
        \---plugins
                AccThresholdExample.py
                BackgroundSubstraction.py
                FlatField.py
                LimaTacoCCD.py
                LiveViewer.py
                Mask.py
                PeakFinder.py
                Roi2Spectrum.py
                RoiCounter.py
                Utils.py
                __init__.py



#===================================================
# 2018/04/24 / RecorderForcedFifo
#   requested by Solei
#===================================================

- with RAMCAM family, make and acq with more frames than allowed
  the memory size
  
void Camera::setRecorderForcedFifo(int val) ; 
void Camera::getRecorderForcedFifo(int &val) ;

when this special mode is set the cam the live mode is set
and the nr of img is set (Nr > maxNrImgInBuffer)

live mode -> assign buffer 1rst img = last img = 0
             "last img acquired"
             
NOTE:
- if the readout time is higher than the acq time
  some img will be lost
  sdk return the LAST image acquired

implemented in 
int BufferCtrlObj::_xferImag()

procedure:
- set recorderForcedFifo to 1
- set the nr of images (Nr > maxNrImgInBuffer)
- make the acq at frame rate not higer than allowed by the readout

tested by Solei OK


#===================================================
# 2016/01/20 / implement a trig start sequence in pco-dimax
#
#   https://jira.esrf.fr/browse/SID27-67
#   https://jira.esrf.fr/browse/SID19-169
#===================================================
pco / properties
  params    trigSingleMulti=1
            -> m_extTrigSingle_eq_Multi 

case ExtTrigSingle:
  trig (at ACQ ENABLE) starts a sequence of int trigger (dimax only)
    the cam is acquiring with int trigger in ring buffer
    when cam receive a trig at ACQ ENABLE, it continues
    acquiring images and STOP after N images
    the last N images saved in the ram, can retrive from 1 .. N
    
  //   StorageMode 0 - record mode
  //   RecorderSubmode 1 - ring buffer
  //   Triggermode 0 - auto
  //   Acquiremode 0 - auto / ignored
  
=== prepareAcq

	// ------- set Record Stop Event (used for dimax for ExtTrigSingle)
	if(_isCameraType(Dimax)) {
		if((trig_mode  == ExtTrigSingle) && (iRequestedFrames > 0)) {
			wRecordStopEventMode = 0x0002;    // record stop by edge at the <acq. enbl.>
			dwRecordStopDelayImages = iRequestedFrames;
			_pco_SetRecordStopEvent(wRecordStopEventMode, dwRecordStopDelayImages, error);
		}
	}  

    if(_isCameraType(Dimax | Pco4k | Pco2k)) {
        if((trig_mode  == ExtTrigSingle) && (iRequestedFrames > 0)) 
		{
			mode = RecRing;
		} 

=== startAcq
		if((iRequestedFrames > 0 ) && (forcedFifo == 0) ){
			if((trig_mode  == ExtTrigSingle) ) {
				_beginthread( _pco_acq_thread_dimax_trig_single, 0, (void*) this);
				
				
=== checkTrigMode
	switch(trig_mode){
		case ExtTrigSingle:
			if ((m_cam->_isCameraType(Dimax)) || m_extTrigSingle_eq_Multi) return true ;
				break;
		

#===================================================
#========= 2017/09/22 / lima patch for buff realloc
#===================================================
lima tag - tango-camera-pco-1.7.5
cb35d0f3a77e09381c5e149d3463d28dd7870067

--->
Merge branch Hardware buffer realloc
move to core-1.7.5


#===================================================
#========= 2017/09/21 / system memory ==============
#===================================================

cameraUtils.cpp = talk
		key = keys[ikey] = "winMem";     
		keys_desc[ikey++] = "(R) read win memory";
		
MemUtils.cpp

void lima::GetSystemMem(int& mem_unit, int& system_mem)
{
	if (mem_unit < 0)
		throw LIMA_HW_EXC(InvalidValue, "Invalid mem_unit value");
#ifdef __unix
        struct sysinfo s_info;
	if (sysinfo(&s_info) < 0)
		throw LIMA_HW_EXC(Error, "Error calling sysinfo");

        long long tot_mem = s_info.totalram;
	tot_mem *= s_info.mem_unit;
	if (mem_unit == 0) 
		mem_unit = s_info.mem_unit;
#else  // Windoze
	MEMORYSTATUSEX statex;
	statex.dwLength = sizeof(statex);
	
	GlobalMemoryStatusEx(&statex);
	long long tot_mem = (long long) statex.ullAvailPhys;
	if (mem_unit == 0) 
	  mem_unit = 1;
#endif

	const bool platform_32 = (sizeof(void *) == 4);
	const long long two_gigas = 2LL * 1024 * 1024 * 1024;
	if ((platform_32) && (tot_mem > two_gigas))
		tot_mem = two_gigas;


	long long huge_blocks = tot_mem / mem_unit;
	if (huge_blocks > INT_MAX)
		huge_blocks = INT_MAX;

	system_mem = int(huge_blocks);
}

CtBuffer.cpp
void CtBuffer::Parameters::reset()
{
  DEB_MEMBER_FUNCT();

  mode= Linear;
  nbBuffers= 1;
  maxMemory= 70;

  DEB_TRACE() << *this;
}


#===================================================
#===================================================


2016/06/06 17:29:24 ==========================================
- long tests done with pco gold /cameralink (wid19edge - 64b)

+++ total nrImages[32768][pco: 32768 lima: 32768 diff: 0] expTime[0.0001] execTime[822.088] fps[39.8595][40.5825] sn[62000031] [2016/06/06 19:30:31]

2016/06/03 17:48:13 ==========================================
- long tests done with pco edge/cameralink (wid19edge - 64b)

+++ total nrImages[32768][pco: 32768 lima: 32768 diff: 0] expTime[0.0001] execTime[666.811] fps[49.1414][50.3204] sn[429][2016/06/03 18:57:46] 

#===================================================
# 2016/05/20
# update the working test version with usb3 / pco edge gold
#===================================================

- test running version 
   comp[2015/12/11 13:17:57] file[2015/12/11 13:16:45] [..\..\..\..\src\PcoCamera.cpp]
   install-2015-12-11_131825

   Branches: develop_02, remotes/github/develop_02
   d2f1fe0cd12ab1c3433d6960bd73c7e1078865e7
   2015-12-11 14:26:34


#===================================================
# 2016/05/19
# blissinstaller package
#===================================================

temporary patch on the core to fix the max lim of mem in 
accumulation mode

------------------------ control/src/CtAccumulation.cpp ------------------------
index 99e11b4..262d1b3 100644
@@ -528,6 +528,10 @@ void CtAccumulation::prepare()
   m_saturated_images.clear();
   CtBuffer *buffer = m_ct.buffer();
   buffer->getNumber(m_buffers_size);
+
+  //----- patch for acc mode 32 bit - 16
+  if(m_buffers_size > 10) m_buffers_size /= 2;
+
   CtAcquisition *acquisition = m_ct.acquisition();
   int acc_nframes;
   acquisition->getAccNbFrames(acc_nframes);
   

#===================================================
# 2016/05/18
# pco 4000 camera / usb2 - FRAME RATE
#===================================================

- in the case of pco 4000, the size is 4008*2672, pco 2000 is  (2048*2048)
  so it will take about 50 * (4008*2672)/(2048*2048) = 128 ms to transfer the image to the DDR.
- the transfer with usb2 will be about 480 Mbps -> 48 MB/s 
- the image size is (4008*2672) * 2 = 21418752B -> 446 ms (usb comm)
- so the complete image transfer will be at 21.418752/(.446 + .128) = 37 MB/s -> 1.74 fps

* dwSerialNumber[2094]
* wCamType[260] wCamSubType[0] [PCO 4000]
* wInterfaceType[3]  [USB]
VS configuration: platform[x64] configuration[Release]
 PCO SDK version: file[sc2_cam.dll] ver[1,18,0,316 /Increv: 399 / Date: 2014/10/01 17:03:28]
* ADC wADCOperation[2] wNumADCsDESC[2]
* pixelRate[32000000](32 MHz)
* imgSize[10709376 px][21418752 B][20.4265 MB]
* bitsPerPix[14] bytesPerPix[2]
* cocRunTime[0.202467] (s) frameRate[4.93907] (fps)
* imgSize[21418752 B] totSize[2141875200 B][2042.65 MB] xferSpeed[38.2741 MB/s][1.87375 fps]
* nrImgRequested0[100] nrImgRequested[100] nrImgAcquired[100] nrImgRecorded[101] maxImgCount[250]
* ... usTicks[6][52813.752] (ms)   (PCO_GetImageEx / API total execTime)
* msImgCoc[202] fps[4.94] msTout[26320] msTotal[74043]
* msExposure[100] msDelay[0]


#===================================================
# 2016/04/13
# pco 2000 camera - FRAME RATE
#===================================================

nrFrames[100]
exp[0.001] delay[0] (s)
roi PCO X(1,2048) Y(1,2048) size(2048,2048)
ADC: working[2]
pixel rate: 40000000 Hz
cocRunTime: 0.0682261 s
frameRate: 14.6571 f/s

- sequence mode recording

that is
- record in the cam memory
- when it finishes, transfer the images to lima

- the record phase is ok

rec[6980] ms <- recording time 101 * coc = 0.0682261 OK

cocRunTime: 0.0682261 s
frameRate: 14.6571 f/s

- the framerate of the acquisition in the cam memory, is NOT the final framerate of the 
readout!

the transfer speed from the camera to lima is low, similar the one you 
reported

xfer[31561] <- 31.5 s -> about 3 frames/s (!!!)

the GigE connection is ok. i get with GigECalib V1,4,0,50
Test succeeded with a maxium datathoughput of 68 MB/sec

the net speed is 68 instead of 100 MB/s, because it takes about 50ms to 
transfer the img to the ddr, and 80ms the transmission at 100 MB/s,
that is the eth link has a net duty of about 80/130 -> 0.61 -> 61 MB/s 
-> 68 MB/s

the image of 2048*2048 is about 8MB -> 8 images/s, associated to the 
GigE communication ...

i tested the time of the API call, that is, counting the time just 
between before/after the call PCO_GetImageEx
* ... usTicks[5][31112.084] (ms)   (PCO_GetImageEx only)

and the rest of time, copy to lima and lima processing is
* ... usTicks[7][315.822] (ms)   (xfer to lima / total execTime)

that is the GigE reduces the speed from about 14.6 f/s to 8 but the api 
reduces this to about 3.1


#===================================================
# 2016/04/01
# from Paul / id17
#===================================================
  Yes, the server crashes, and then has to be restarted, and the frame corresponding to the crash is exactly at 
  64Gb. the error message on the windows machine is linked to the memory saturation. 
  If the size of the complete scan is lower, then it works fine, but 64 Gb is a rather small size for a scan 
  with half-acquisition.

  We are currently doing an experiment on ID17 with the PCO edge. (new 64 bits version)
  We had series of crashes, they happen when the size of the scan is more than 64 Gb. 
  During the scan, the memory is constantly increasing and is released only at the end
  once it reaches the total RAM (64Gb) everything crashes.
  
  - the fix of the memory in the 32b release / core 1.3 2014/03/07
  was changed
  
  - Manu included this during setup
    def ftomoccdsetup '{
    # buffer max memory
    _limapar_set(ccd_name, "buffer_max_memory", ccd_maxmem)

  - included the property mem_factor (0 -100) in the pco device

  - test
  
  ---------------
       timestamp: 2016/04/01 16:31:52
   computer name: ISG-PCO2K2
       user name: opid00
VS configuration: platform[x64] configuration[Release]

=================================================
   mem_factor: org[70] req[50] now[50]
=================================================
--------------- 


#===================================================
# 2015-09-10 18:18:10
# 4d5d8a8e401ac445911fd86d22adb7442b68d8fd 
# Tags: pco-win64-1.4.1
#===================================================
# including the platform and the configuration
#===================================================

PreprocessorDefinitions= VS_PLATFORM=$(PlatformName);VS_CONFIGURATION=$(ConfigurationName);
liblimapco -> properties -> c/c++ -> preprocessor -> preprocessor definitions:

   VS_PLATFORM=$(PlatformName)
   VS_CONFIGURATION=$(ConfigurationName)

the macro $(PlatformName) is Win32 or x64
the macro $(ConfigurationName) is Release_Win7_Sync or Release

PreprocessorDefinitions= VS_PLATFORM=$(PlatformName);VS_CONFIGURATION=$(ConfigurationName);

the preprocessor change these values to strings:

   #define Win32				"Win32"
   #define x64					"x64"
   #define Release_Win7_Sync	"Release_Win7_Sync"
   #define Release				"Release"

then we can use in:

	__sprintfSExt(infoBuff, bufCharCount, "platform[%s] configuration[%s]",  
		VS_PLATFORM,
		VS_CONFIGURATION); 


#===================================================
# 2015/06/22
  - changed the repository for lima/win
    /segfs/bliss/projects/LIMA/build/depot_win
    /segfs/bliss/projects/LIMA/build/depot_win/win32_vc9/pco

#===================================================
# 2014/09/19
  - when tested without cam python error in fglib5.dll (not found) 
  -- included in cameralink RuntimeSetup_v5.1.4_IA32.exe 
  -- installed ok

#===================================================
# 2014/08/13
  - cleaned test modules xferMulti, ...
  -- before clean: f01ad1f9f36714855a5e8a6c9221866ad00e2f6c

#===================================================
# 2014/08/13
  - stop -> stop recording -> xfer to lima
  -- afer 5 stops -> stop xfer to lima

#===================================================
# 2014/08/1 ... /12 
  - hw rois
  - talk / lastImgRecorded
  - s/n
  - debug, minor, cosmetics ...

#===================================================
# 2014/05/18 
  - clean

#===================================================
# 2013/03/21
  - fixes and pull request #1 from Solei
  - WITH_GIT_VERSION and move .sln to build
  
#===================================================
# 2013/03/17
  - working with DIMAX to save in lima the recorded frames if an acqStop is received during
    the record

#===================================================
# 2013/03/13
  - include line & file in Pco check error
  - set compatibility of nr ADC between dimax (1) and pco4k (2)
  - add - HwEventCtrlObj

#===================================================
# 2014/03/12  
  wid15dimax2 merge with limace
     pco pco-1.3.1a - b8367b29953a43e718b017b8ed08930ca9e709a2
     lima - 75038daab2305b1da2a2af1aeef7ced312d105e6
     
#===================================================
# 2014/03/10  
 lima tag pco-1.3.0 (limace)  
   lima - tag pco-1.3.0 - 75038daab2305b1da2a2af1aeef7ced312d105e6
   pco - branch pco-1.3.0 - a1a1cfdff4d7e113cefd53bd8353dd56157dd889

   --- test references - not used
   lima - core 1.3.2 - 56b4036c74ee0c6c78a1904b8ef7e1c697da934c
   lima - core 1.3 - 75038daab2305b1da2a2af1aeef7ced312d105e6

#===================================================
# 2014/03/07  
 update actual release to package with version / tag
   lima - 5d95d2bdf27a987ec010bb88e7105a2f73a343fe

#===================================================
# rh 2014/03/07 - e0b4707bd3b131a0c49eae0a4b47814ce2d41fa0

Lima/common/src/MemUtils.cpp

int lima::GetDefMaxNbBuffers(const FrameDim& frame_dim, double sys_mem_factor)

	if (sys_mem_factor == 0)
		sys_mem_factor = 0.8;   <----- changed to 0.7



#===================================================
#===================================================
# NOTES
#===================================================
#===================================================


#=========================================================================
# script to extract the git hash id to PcoGitVersion.h
#    run it MANUALLY!
#=========================================================================

homsrego@WID00LIMACE ~/git/pco/Lima/camera/pco ((pco-1.3.2))
-rwxr-xr-x    1 homsrego Administ     1356 May 18 17:25 setId

$ ./setId
#define        PCO_GIT_VERSION "$Id:       PCO rev[2014-05-18 17:42:34 +0200] head[eb5c960][eb5c96053d06619b575323ebc915c109a68602c4] at [2014/05/18 18:08:38] $"
#define       LIMA_GIT_VERSION "$Id:      LIMA rev[2014-03-31 09:08:59 +0200] head[75d2def][75d2def73f0469c6c4a185381eb7b20509189bee] at [2014/05/18 18:08:38] $"
#define    PROCLIB_GIT_VERSION "$Id:   PROCLIB rev[2014-03-07 16:52:19 +0100] head[52a3557][52a3557a28917bfc8a3f03f3e35f6a1cb6515280] at [2014/05/18 18:08:38] $"
#define  LIBCONFIG_GIT_VERSION "$Id: LIBCONFIG rev[2013-02-07 18:08:29 +0100] head[89c411a][89c411a541d4ab4d66257ccb85749853fd685cbb] at [2014/05/18 18:08:38] $"



#===============================================================================
# blissinstaller packages
#===============================================================================
(blissadm)
NOT VALID - bestia:/segfs/bliss/projects/LIMA/build/depot/win32_vc9/pco %           

blissinstaler:
Control/Tango/Server/LimaCCDs-pco/win32_vc9/1.5

On 22/06/2015 16:49
> /segfs/bliss/projects/LIMA/build/depot_win
> /segfs/bliss/projects/LIMA/build/depot_win/win32_vc9/pco


#===============================================================================
#===============================================================================
# file .../Lima/README_WINDOW

# file .../notes/lima/README_WINDOW.txt

#===============================================================================
# Compilation of python Lima Modules for Windows
#
# use the special command prompt console to compile!!!
# start -> Programs -> MS visual c++ 2008 Express Edition 
#       -> visual studio tools -> VS 2008 Cmd Prompt
#===============================================================================
#------------------------------------------------------------------------
# Setting environment for using Microsoft Visual Studio 2008 x86 tools.
# C:\Program Files\Microsoft Visual Studio 9.0\VC>
# C:\Program Files\Microsoft Visual Studio 9.0\VC>limabase   <--- to go to lima home
# c:\Users\homsrego\git\pco\Lima>                            <---
#------------------------------------------------------------------------

************************************************
*** after test OK -> git commit -a
*** setId (header is modified with the new hash)
*** compile again
************************************************

  - first copy config.inc_default to config.inc
        limabase
        Lima>

  - configure config.inc
      COMPILE_CORE=1
      COMPILE_PCO=1

  - go to third-party\Processlib\sip
        limaproc
        cd sip
        Lima\third-party\Processlib\sip>
    
  - then run 
        Lima\third-party\Processlib\sip>

        python configure.py
        nmake clean
        nmake

  - then go back to Lima
        Lima\third-party\Processlib\sip>
        limabase
        Lima>
        
  - then run 
        python windowsSipCompilation.py --config

        python windowsSipCompilation.py

        python windowsInstall.py

        limacpins

********************************************************************************************
*** delete /tmp_14_days/rhoms1/install-beta
*** cpInstall - copy install to
***     /tmp_14_days/rhoms1/install-beta
***     /tmp_14_days/rhoms1/install-DT
***     blissadm@lid00a:/segfs/bliss/projects/LIMA/build/depot_win/win_vc9/pco/install-DT
********************************************************************************************

********************************************************************************************
blissdb: 
  cd /segfs/bliss/projects/LIMA/build/depot_win/win_vc9/pco
  mkdir pco-win64-1.4.5
  cp -r install-2016-03-31_134518/ pco-win64-1.4.5/install
********************************************************************************************

#===============================================================================
# For Linux platform, It's manage by the master Makefile
#===============================================================================
  - got to the Lima root project
  - then run make config
  - then run make -C sip -j3

#=========================================================================
# script to extract the git hash id to PcoGitVersion.h
#    run it MANUALLY!
#=========================================================================

homsrego@WID00LIMACE ~/git/pco/Lima/camera/pco ((pco-1.3.2))
-rwxr-xr-x    1 homsrego Administ     1356 May 18 17:25 setId

$ ./setId

#----------------------------------------------------------------------------
- include git version
  - enable this option with the preprocessor def WITH_GIT_VERSION
    if requiered may be set int the enviroment var CL instead of in the proyect:
       CL = /D WITH_GIT_VERSION
  - file ./include/PcoGitVersion.h
  - after commit -> run setID -> build again
#----------------------------------------------------------------------------


#===============================================================================
# debug flags
#===============================================================================
0x31 -> dateTime function fileLine
0x30 -> function fileLine

enum DebFormat {
	DebFmtDateTime		= 1 << 0,
	DebFmtThread		= 1 << 1,
	DebFmtModule		= 1 << 2,
	DebFmtObj		= 1 << 3,
	DebFmtFunct		= 1 << 4,	
	DebFmtFileLine		= 1 << 5,
	DebFmtType		= 1 << 6,
	DebFmtIndent		= 1 << 7,
	DebFmtColor		= 1 << 8,
};

#===============================================================================
# git / config
#===============================================================================
[core]
	repositoryformatversion = 0
	filemode = false
	bare = false
	logallrefupdates = true
	symlinks = false
	ignorecase = true
	hideDotFiles = dotGitOnly
[remote "origin"]
	url = git@github.com:esrf-bliss/Lima.git
	fetch = +refs/heads/*:refs/remotes/origin/*
[branch "master"]
	remote = origin
	merge = refs/heads/master
[submodule "third-party/Processlib"]
	url = git@github.com:esrf-bliss/Processlib.git
[submodule "third-party/Sps"]
	url = git@github.com:esrf-bliss/Sps.git
[submodule "third-party/libconfig"]
	url = git@github.com:esrf-bliss/libconfig.git
[submodule "documentation"]
	url = git@github.com:esrf-bliss/Lima-documentation
[submodule "applications/spec"]
	url = git@github.com:esrf-bliss/Lima-spec
[submodule "applications/tango"]
	url = git@github.com:esrf-bliss/Lima-tango
[submodule "camera/pco"]
	url = git@github.com:esrf-bliss/Lima-camera-pco
[submodule "documentation"]
	url = git@github.com:esrf-bliss/Lima-documentation
[branch "core-1.4"]
	remote = origin
	merge = refs/heads/core-1.4



OPID15@WID15DIMAX2 /c/blissadm/git/pco/Lima/.git/modules/camera/pco (master)
$ cat config
[core]
        repositoryformatversion = 0
        filemode = false
        bare = false
        logallrefupdates = true
        worktree = ../../../../camera/pco
        symlinks = false
        ignorecase = true
        hideDotFiles = dotGitOnly
[remote "origin"]
        url = git@github.com:esrf-bliss/Lima-camera-pco   <---
        fetch = +refs/heads/*:refs/remotes/origin/*
[branch "master"]
        remote = origin
        merge = refs/heads/master




#======================================================================
# 2013/10/07 - ram memory / bits per pixel ...
#======================================================================

The CRC bit is used, too. Thus you'll have to divide by 9.
It does not sum up exactly to 4GB since there is additional alignment and other memory use.


(14/8 bytes/pix) - 639 * 2048 * 2048 * 14 / 8 / (1024*1024*1024)= 4,36

(14/9 bytes/pix) - 639 * 2048 * 2048 * 14 / 9 / (1024*1024*1024)= 3,88  - why /9???

((14+1)/8 bytes/pix) - 639 * 2048 * 2048 * 15 / 8 / (1024*1024*1024) = 4,68

#----------
http://www.pco.de   support@pco.de

- the camera has 4GB of ram

- from sdk functions i get
2097152 pages in RAM
1280 pix per page
14 bit per pix

but
(2 bytes / pix) - 2097152 * 1280 * 2bytes = 536870912 bytes
(14/8 bytes/pix) - 2097152 * 1280 * 14/8 = 4697620480 bytes

- for images of 2048 * 2048, i get the max img count = 639 (assigned all
the ram to 1 segment)

so
(2 bytes / pix) - 639 * 2048 * 2048 * 2 = 5360320512
(14/8 bytes/pix) - 639 * 2048 * 2048 * 14 / 8 = 4690280448

in any case these values are little more than 4GB (4294967296)


 
